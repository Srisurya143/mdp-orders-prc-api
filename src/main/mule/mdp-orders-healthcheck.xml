<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="mdp-orders-healthcheck-subflow" doc:id="49469786-4a87-4b5a-9360-7b46037c1f05" >
		<ee:transform doc:name="updateFlowname" doc:id="fe79e9b3-7925-4fdd-9f00-12e9655f4394" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="flowName" ><![CDATA[%dw 2.0
output application/json
---
vars.loggingVars update {
	case .flowName -> Mule::p('flowName.healthCheckSubflow')
}
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="common-flow-start-logging-subflow" doc:id="ff9514b0-29ec-4e40-ad7f-12c5dfab7e86" name="common-flow-start-logging-subflow"/>
		<flow-ref doc:name="common-before-request-logging-subflow" doc:id="c8c008ff-69bf-48c2-a81d-3dfac225a965" name="common-before-request-logging-subflow"/>
		<http:request method="GET" doc:name="healthCheckRequest" doc:id="8705eb78-c5a8-4cd7-9019-815bec9bf4e7" config-ref="Orders_Sys_Request" path="${mdpOrdersSysApi.healthCheck}" sendCorrelationId="ALWAYS" correlationId="#[correlationId]">
			<http:headers ><![CDATA[#[output application/java
---
{
	"client_secret" : 1234,
	"client_id" : 1234
}]]]></http:headers>
		</http:request>
		<ee:transform doc:name="healthCheckResponse" doc:id="20640a87-2ccc-4cb3-a05e-10c932d34eb6">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
                "message": Mule::p('healthCheck.ok'),
                "reason": Mule::p('healthCheck.reason'),
                "response": {
                	"application": Mule::p('api.Name'),
                	"buildVersion": Mule::p('api.Version'),
                	"buildTimeStamp": now(),
                	"code": if(payload.response.systems.code contains "ERROR") Mule::p('healthCheck.systems.error') else Mule::p('healthCheck.okCode'),
                	"failed": if(payload.response.systems.code contains "ERROR") false else true,
                	"host":  Mule::p('healthCheck.host'),
                	"tire": p('mule.env'),
                    "systems":payload.response.systems ++ [{
                  	"code": if(payload.response == "ERROR") "ERROR" else "OK",
                  	"message": if(payload.response == false) Mule::p('healthCheck.isReachable') else Mule::p('healthCheck.isNotReachable'), 
                    "name": Mule::p('healthCheck.appName')
                    
                    }],
                "status": "200" 
               }
             
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="common-after-request-logging-subflow" doc:id="f8e2ef86-d94d-4036-9122-e3fdbb6ac2ec" name="common-after-request-logging-subflow"/>
		<flow-ref doc:name="common-flow-end-logging-subflow" doc:id="2f9f5aa8-c878-43f8-825a-38f36980bf06" name="common-flow-end-logging-subflow"/>
	</sub-flow>
</mule>
